@page "/VariantG"
@attribute [StreamRendering]
@inject IMeasurementRepository measurementRepository;
@rendermode InteractiveServer
@inject IJSRuntime JS

<head>
    <PageTitle>Variant G</PageTitle>

    <link href="VariantG.css" rel="stylesheet" />
</head>

<!-- ------------------------------------------------Informatie over het algoritme------------------------------------------------ -->
<div class="container mt-2 mb-2">
    <div class="text-center">
        <h1 class="display-4">Variant @variant</h1>
        <p class="lead">Door: @name</p>
    </div>
    <div class="row">
        <!-- https://getbootstrap.com/docs/5.3/components/accordion/ -->
        <div class="accordion" id="accordionAlgoritme">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button style="z-index: inherit;" class="accordion-button h2" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Het algoritme:
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionAlgoritme">
                    <div class="accordion-body">
                        <!-- opent modal voor context-info -->
                        <em class="text-primary modal-cursor" data-toggle="modal" data-target="#contextModal" id="openContextModal">Klik hier voor meer context over waarom dit algoritme belangrijk is.</em>
                        <p class="text-justify">
                            Bereken over een instelbare tijdsperiode het energieverbruik en de kosten per dag. 
                            Ga uit van de dynamische energietarieven die in het betreffende tijdsblok gelden. 
                            Bereken daarnaast de kosten indien het opgenomen vermogen groter is dan een bepaalde waarde. 
                            Pas de dynamische prijs toe met het bijbehorende toeslagpercentage voor het opgenomen vermogen op dat moment, 
                            <p><em>zie hiervoor de onderstaande tabel.</em></p>
                        </p>
                        <div class="row">
                            <div class="col-md-8">
                                <table class="table table-striped table-bordered table-hover mt-1">
                                    <thead class="thead-dark text-center">
                                        <tr>
                                            <th>Vermogen in Watt</th>
                                            <th>Toeslag op de energieprijs in %</th>
                                        </tr>
                                    </thead>
                                    <tbody class="text-center">
                                        <tr>
                                            <td>0 - 1000</td>
                                            <td>0%</td>
                                        </tr>
                                        <tr>
                                            <td>1001 - 2000</td>
                                            <td>25%</td>
                                        </tr>
                                        <tr>
                                            <td>2001 - 3000</td>
                                            <td>38%</td>
                                        </tr>
                                        <tr>
                                            <td>3001 - 4000</td>
                                            <td>44%</td>
                                        </tr>
                                        <tr>
                                            <td>4001 - hoger</td>
                                            <td>47%</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-8">
                                <p class="mt-2">
                                    Toon onder de dagelijkse analyse het totaal verbruikte energie, de totale kosten met en zonder capaciteittarief 
                                    en het gemiddelde percentage van de toeslag over deze periode.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- ------------------------------------------------  resultaten van het algoritme ------------------------------------------------ -->
@* cards met analyse data. *@
<div class="container mt-4 mb-5">
    <div class="row">
        <div class="col-md-6 d-flex flex-column">

            @* dagelijkse analyse card *@
            <div class="card mb-3">
                <div class="card-header">
                    <h3 class="card-title">Dagelijkse analyse</h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-10">
                            <p><strong>Totaal verbruikte energie: </strong>@totalUsageToday kWh</p>
                            
                            <p><strong>Totale kosten zonder capaciteitstarief: </strong> @if (totalPriceWithoutSurchargeToday != null) {@totalPriceWithoutSurchargeToday.Value.ToString("C") } else { <em>Geen prijs berekend.</em> }</p>
                            <p><strong>Totale kosten met capaciteitstarief: </strong> @if (totalPriceWithSurchargeToday != null) {@totalPriceWithSurchargeToday.Value.ToString("C") } else { <em>Geen prijs berekend.</em> }</p>
                            <p><strong>Gemiddelde toeslag: </strong>@averageSurchargeToday %</p>
                        </div>
                    </div>
                </div>
            </div>

            @* instellingen card *@
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Instellingen</h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <label for="tijdsperiode" class="form-label"><strong>Selecteer uw periode:</strong></label>
                            <p><em>De hoeveelheid afgelopen dagen die u zichtbaar wil zien, minimaal 1, maximaal 30.</em></p>
                            <p><em> Metingen worden gedaan om het uur.</em></p>
                            <div class="col-md-6">
                                <input type="range" class="form-range" id="tijdsperiode" min="1" max="30" step="1" @bind="tijdsPeriode"/>
                                <output id="tijdsperiodeOutput"> @if (tijdsPeriode >= 1 && tijdsPeriode <= 30) {@tijdsPeriode <span>Dag(en)</span>} else {<p>Geen geldig aantal dagen. Aantal dagen naar 1 gezet.</p>}</output>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-6">
                            <button class="btn btn-primary" @onclick="setDays" id="renderCharts">Bereken</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            @* analyse resultaat card *@
            <div class="card h-100">
                <div class="card-header">
                    <h3 class="card-title"><output id="tijdsperiodeOutput"> @if (tijdsPeriode >= 1 && tijdsPeriode <= 30) {<span>Analyse voor: </span>@numberOfDays <span>dag(en)</span>} else {<p>Geen geldig aantal dagen. Aantal naar 1 dag analyse gezet.</p>}</output></h3>
                </div>
                <div class="card-body d-flex flex-column justify-content-center">
                    <div class="row mt-2">
                        <div class="col-md-10">
                            <p><strong>Totaal verbruikte energie: </strong>@totalUsage kWh</p>
                            <p><strong>Totale kosten zonder capaciteitstarief: </strong> @if (totalPriceWithoutSurcharge != null) {@totalPriceWithoutSurcharge.Value.ToString("C") } else { <em>Geen prijs berekend.</em> }</p>
                            <p><strong>Totale kosten met capaciteitstarief: </strong> @if (totalPriceWithSurcharge != null) {@totalPriceWithSurcharge.Value.ToString("C") } else { <em>Geen prijs berekend.</em> }</p>
                            <p><strong>Gemiddelde toeslag: </strong>@averageSurcharge %</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- ------------------------------------------------ Modal voor context-info ------------------------------------------------ -->
<!-- https://getbootstrap.com/docs/5.3/components/modal/ -->
<div class="modal fade" id="contextModal" tabindex="-1" aria-labelledby="contextModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="contextModalLabel">Piektransport context:</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    Piektransport (grote vermogens op bepaalde momenten) levert een grote kostenpost voor de netbeheerder 
                    en stagneert de energietransitie door congestieproblemen (file op het elektriciteitsnet). Een methode om 
                    mensen bewust te maken hiervan en hun energie wat te spreiden kan gedaan worden door een capaciteitstarief 
                    in te voeren. Heb je meer vermogen nodig op een bepaald moment dan kom je in een hogere schaal en betaal je 
                    meer voor je energie. Dit wordt bijvoorbeeld in België gedaan. Ook in Nederland zijn er ideeën om iets 
                    soortgelijks in te voeren.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Sluit</button>
            </div>
        </div>
    </div>
</div>

<script>
    //Modal voor context-info, Openen en sluiten
    document.getElementById('openContextModal').addEventListener('click', () => {
        var contextModal = new bootstrap.Modal(document.querySelector(`#contextModal`));
        contextModal.show();
    });
</script>


<!-- ------------------------------------------------ Grafiek voor de verbruik, kosten en toeslag------------------------------------------------ -->
@if (IsChartVisible)
{
    <div class="container mt-4 mb-5">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Kosten per dag</h3>
                        <div class="btn-group" role="group" aria-label="Chart selection">
                            <button @onclick="RenderUsageChart" class="btn btn-success">Verbruik (kWh)</button>
                            <button @onclick="RenderCostChart" class="btn btn-primary">Kosten (€)</button>
                            <button @onclick="RenderPercentageChart" class="btn btn-danger">Toeslag (%)</button>
                        </div>
                    </div>
                    <div class="card-body" style="position: relative; height: 400px;">
                        <canvas id="costChart" width="1800" height="400"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    //https://www.chartjs.org/docs/latest/getting-started/usage.html
    window.renderChart = (datasetType, days, totalUsageData, totalCostsData, totalPercentageData) => {
        try {
            const ctx = document.getElementById("costChart").getContext("2d");
            if (!ctx) {
                console.error("Canvas context not found!");
                return;
            }

            if (window.costChart instanceof Chart) {
                window.costChart.destroy();
            }

        if (!ctx) {
            console.log("Canvas context not found!");
            return;
        }

        if (window.costChart instanceof Chart) {
            console.log("Destroying previous chart instance...");
            window.costChart.destroy();
        }

        // Generate timestamps based on the selected number of days
        const today = new Date();
        const timestamps = Array.from({ length: days }, (_, i) => {
            const date = new Date(today);
            date.setDate(today.getDate() - (days - 1 - i));
            // Format as DD-MM-YYYY
            return date.toLocaleDateString('nl-NL');
        });

        // Data for each chart
        const dataMap = {
            usagekwh: {
                label: 'Verbruik (kWh)',
                data: totalUsageData,
                borderColor: 'rgba(75, 192, 192, 1)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
            },
            costs: {
                label: 'Kosten (€)',
                data: totalCostsData,
                borderColor: 'rgba(54, 162, 235, 1)',
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
            },
            percentage: {
                label: 'Toeslag (%)',
                data: totalPercentageData,
                borderColor: 'rgba(255, 99, 132, 1)',
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
            }
        };

        // Get the dataset on click
        const selectedData = dataMap[datasetType];

        // Render chart with the selected dataset and timestamps
        window.costChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: timestamps,
                datasets: [{
                    label: selectedData.label,
                    data: selectedData.data,
                    borderColor: selectedData.borderColor,
                    backgroundColor: selectedData.backgroundColor,
                    fill: true,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

            console.log(`Chart for ${datasetType} rendered with ${days} days.`);
        } catch (error) {
            console.error("Error in renderChart:", error);
        }
    };

</script>
